// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

// ProjectSnippetsService is an interface for [gitlab.Client.ProjectSnippets]
type ProjectSnippetsService interface {
	// ListSnippets gets a list of project snippets.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/project_snippets.html#list-snippets
	ListSnippets(pid interface{}, opt *ListProjectSnippetsOptions, options ...RequestOptionFunc) ([]*Snippet, *Response, error)
	// GetSnippet gets a single project snippet
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/project_snippets.html#single-snippet
	GetSnippet(pid interface{}, snippet int, options ...RequestOptionFunc) (*Snippet, *Response, error)
	// CreateSnippet creates a new project snippet. The user must have permission
	// to create new snippets.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/project_snippets.html#create-new-snippet
	CreateSnippet(pid interface{}, opt *CreateProjectSnippetOptions, options ...RequestOptionFunc) (*Snippet, *Response, error)
	// UpdateSnippet updates an existing project snippet. The user must have
	// permission to change an existing snippet.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/project_snippets.html#update-snippet
	UpdateSnippet(pid interface{}, snippet int, opt *UpdateProjectSnippetOptions, options ...RequestOptionFunc) (*Snippet, *Response, error)
	// DeleteSnippet deletes an existing project snippet. This is an idempotent
	// function and deleting a non-existent snippet still returns a 200 OK status
	// code.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/project_snippets.html#delete-snippet
	DeleteSnippet(pid interface{}, snippet int, options ...RequestOptionFunc) (*Response, error)
	// SnippetContent returns the raw project snippet as plain text.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/project_snippets.html#snippet-content
	SnippetContent(pid interface{}, snippet int, options ...RequestOptionFunc) ([]byte, *Response, error)
}
