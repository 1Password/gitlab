// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

import (
	"bytes"
)

// JobsService is an interface for [gitlab.Client.Jobs]
type JobsService interface {
	// ListProjectJobs gets a list of jobs in a project.
	//
	// The scope of jobs to show, one or array of: created, pending, running,
	// failed, success, canceled, skipped; showing all jobs if none provided
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#list-project-jobs
	ListProjectJobs(pid interface{}, opts *ListJobsOptions, options ...RequestOptionFunc) ([]*Job, *Response, error)
	// ListPipelineJobs gets a list of jobs for specific pipeline in a
	// project. If the pipeline ID is not found, it will respond with 404.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#list-pipeline-jobs
	ListPipelineJobs(pid interface{}, pipelineID int, opts *ListJobsOptions, options ...RequestOptionFunc) ([]*Job, *Response, error)
	// ListPipelineBridges gets a list of bridges for specific pipeline in a
	// project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#list-pipeline-jobs
	ListPipelineBridges(pid interface{}, pipelineID int, opts *ListJobsOptions, options ...RequestOptionFunc) ([]*Bridge, *Response, error)
	// GetJobTokensJob retrieves the job that generated a job token.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/jobs.html#get-job-tokens-job
	GetJobTokensJob(opts *GetJobTokensJobOptions, options ...RequestOptionFunc) (*Job, *Response, error)
	// GetJob gets a single job of a project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#get-a-single-job
	GetJob(pid interface{}, jobID int, options ...RequestOptionFunc) (*Job, *Response, error)
	// GetJobArtifacts get jobs artifacts of a project
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#get-job-artifacts
	GetJobArtifacts(pid interface{}, jobID int, options ...RequestOptionFunc) (*bytes.Reader, *Response, error)
	// DownloadArtifactsFile download the artifacts file from the given
	// reference name and job provided the job finished successfully.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#download-the-artifacts-archive
	DownloadArtifactsFile(pid interface{}, refName string, opt *DownloadArtifactsFileOptions, options ...RequestOptionFunc) (*bytes.Reader, *Response, error)
	// DownloadSingleArtifactsFile download a file from the artifacts from the
	// given reference name and job provided the job finished successfully.
	// Only a single file is going to be extracted from the archive and streamed
	// to a client.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#download-a-single-artifact-file-by-job-id
	DownloadSingleArtifactsFile(pid interface{}, jobID int, artifactPath string, options ...RequestOptionFunc) (*bytes.Reader, *Response, error)
	// DownloadSingleArtifactsFile download a single artifact file for a specific
	// job of the latest successful pipeline for the given reference name from
	// inside the jobâ€™s artifacts archive. The file is extracted from the archive
	// and streamed to the client.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#download-a-single-artifact-file-from-specific-tag-or-branch
	DownloadSingleArtifactsFileByTagOrBranch(pid interface{}, refName string, artifactPath string, opt *DownloadArtifactsFileOptions, options ...RequestOptionFunc) (*bytes.Reader, *Response, error)
	// GetTraceFile gets a trace of a specific job of a project
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#get-a-log-file
	GetTraceFile(pid interface{}, jobID int, options ...RequestOptionFunc) (*bytes.Reader, *Response, error)
	// CancelJob cancels a single job of a project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#cancel-a-job
	CancelJob(pid interface{}, jobID int, options ...RequestOptionFunc) (*Job, *Response, error)
	// RetryJob retries a single job of a project
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#retry-a-job
	RetryJob(pid interface{}, jobID int, options ...RequestOptionFunc) (*Job, *Response, error)
	// EraseJob erases a single job of a project, removes a job
	// artifacts and a job trace.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#erase-a-job
	EraseJob(pid interface{}, jobID int, options ...RequestOptionFunc) (*Job, *Response, error)
	// KeepArtifacts prevents artifacts from being deleted when
	// expiration is set.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#keep-artifacts
	KeepArtifacts(pid interface{}, jobID int, options ...RequestOptionFunc) (*Job, *Response, error)
	// PlayJob triggers a manual action to start a job.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/jobs.html#run-a-job
	PlayJob(pid interface{}, jobID int, opt *PlayJobOptions, options ...RequestOptionFunc) (*Job, *Response, error)
	// DeleteArtifacts delete artifacts of a job
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#delete-job-artifacts
	DeleteArtifacts(pid interface{}, jobID int, options ...RequestOptionFunc) (*Response, error)
	// DeleteProjectArtifacts delete artifacts eligible for deletion in a project
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/job_artifacts.html#delete-project-artifacts
	DeleteProjectArtifacts(pid interface{}, options ...RequestOptionFunc) (*Response, error)
}
