// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

// SearchService is an interface for [gitlab.Client.Search]
type SearchService interface {
	// Projects searches the expression within projects
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-projects
	Projects(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Project, *Response, error)
	// ProjectsByGroup searches the expression within projects for
	// the specified group
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#group-search-api
	ProjectsByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Project, *Response, error)
	// Issues searches the expression within issues
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-issues
	Issues(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Issue, *Response, error)
	// IssuesByGroup searches the expression within issues for
	// the specified group
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-issues-1
	IssuesByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Issue, *Response, error)
	// IssuesByProject searches the expression within issues for
	// the specified project
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-issues-2
	IssuesByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Issue, *Response, error)
	// MergeRequests searches the expression within merge requests
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-merge_requests
	MergeRequests(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*MergeRequest, *Response, error)
	// MergeRequestsByGroup searches the expression within merge requests for
	// the specified group
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-merge_requests-1
	MergeRequestsByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*MergeRequest, *Response, error)
	// MergeRequestsByProject searches the expression within merge requests for
	// the specified project
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-merge_requests-2
	MergeRequestsByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*MergeRequest, *Response, error)
	// Milestones searches the expression within milestones
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-milestones
	Milestones(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Milestone, *Response, error)
	// MilestonesByGroup searches the expression within milestones for
	// the specified group
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-milestones-1
	MilestonesByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Milestone, *Response, error)
	// MilestonesByProject searches the expression within milestones for
	// the specified project
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-milestones-2
	MilestonesByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Milestone, *Response, error)
	// SnippetTitles searches the expression within snippet titles
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-snippet_titles
	SnippetTitles(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Snippet, *Response, error)
	// SnippetBlobs searches the expression within snippet blobs
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-snippet_blobs
	SnippetBlobs(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Snippet, *Response, error)
	// NotesByProject searches the expression within notes for the specified
	// project
	//
	// GitLab API docs: // https://docs.gitlab.com/ee/api/search.html#scope-notes
	NotesByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Note, *Response, error)
	// WikiBlobs searches the expression within all wiki blobs
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-wiki_blobs
	WikiBlobs(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Wiki, *Response, error)
	// WikiBlobsByGroup searches the expression within wiki blobs for
	// specified group
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-wiki_blobs-premium-1
	WikiBlobsByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Wiki, *Response, error)
	// WikiBlobsByProject searches the expression within wiki blobs for
	// the specified project
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/search.html#scope-wiki_blobs-premium-2
	WikiBlobsByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Wiki, *Response, error)
	// Commits searches the expression within all commits
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-commits
	Commits(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Commit, *Response, error)
	// CommitsByGroup searches the expression within commits for the specified
	// group
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-commits-premium-1
	CommitsByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Commit, *Response, error)
	// CommitsByProject searches the expression within commits for the
	// specified project
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-commits-premium-2
	CommitsByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Commit, *Response, error)
	// Blobs searches the expression within all blobs
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-blobs
	Blobs(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Blob, *Response, error)
	// BlobsByGroup searches the expression within blobs for the specified
	// group
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-blobs-premium-1
	BlobsByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Blob, *Response, error)
	// BlobsByProject searches the expression within blobs for the specified
	// project
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-blobs-premium-2
	BlobsByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*Blob, *Response, error)
	// Users searches the expression within all users
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-users
	Users(query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*User, *Response, error)
	// UsersByGroup searches the expression within users for the specified
	// group
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-users-1
	UsersByGroup(gid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*User, *Response, error)
	// UsersByProject searches the expression within users for the
	// specified project
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/search.html#scope-users-2
	UsersByProject(pid interface{}, query string, opt *SearchOptions, options ...RequestOptionFunc) ([]*User, *Response, error)
}
