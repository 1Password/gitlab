// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

import (
	"bytes"
	"io"
)

// GroupsService is an interface for [gitlab.Client.Groups]
type GroupsService interface {
	// ListGroupHooks gets a list of group hooks.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#list-group-hooks
	ListGroupHooks(gid interface{}, opt *ListGroupHooksOptions, options ...RequestOptionFunc) ([]*GroupHook, *Response, error)
	// GetGroupHook gets a specific hook for a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#get-a-group-hook
	GetGroupHook(gid interface{}, hook int, options ...RequestOptionFunc) (*GroupHook, *Response, error)
	// ResendGroupHookEvent resends a specific hook event.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#resend-group-hook-event
	ResendGroupHookEvent(gid interface{}, hook int, hookEventID int, options ...RequestOptionFunc) (*Response, error)
	// AddGroupHook creates a new group scoped webhook.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#add-a-group-hook
	AddGroupHook(gid interface{}, opt *AddGroupHookOptions, options ...RequestOptionFunc) (*GroupHook, *Response, error)
	// EditGroupHook edits a hook for a specified group.
	//
	// Gitlab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#edit-group-hook
	EditGroupHook(gid interface{}, hook int, opt *EditGroupHookOptions, options ...RequestOptionFunc) (*GroupHook, *Response, error)
	// DeleteGroupHook removes a hook from a group. This is an idempotent
	// method and can be called multiple times.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#delete-a-group-hook
	DeleteGroupHook(gid interface{}, hook int, options ...RequestOptionFunc) (*Response, error)
	// TriggerTestGroupHook triggers a test hook for a specified group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#trigger-a-test-group-hook
	TriggerTestGroupHook(pid interface{}, hook int, trigger GroupHookTrigger, options ...RequestOptionFunc) (*Response, error)
	// SetGroupCustomHeader creates or updates a group custom webhook header.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#set-a-custom-header
	SetGroupCustomHeader(gid interface{}, hook int, key string, opt *SetHookCustomHeaderOptions, options ...RequestOptionFunc) (*Response, error)
	// DeleteGroupCustomHeader deletes a group custom webhook header.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#delete-a-custom-header
	DeleteGroupCustomHeader(gid interface{}, hook int, key string, options ...RequestOptionFunc) (*Response, error)
	// SetGroupHookURLVariable sets a group hook URL variable.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#set-a-url-variable
	SetGroupHookURLVariable(gid interface{}, hook int, key string, opt *SetHookURLVariableOptions, options ...RequestOptionFunc) (*Response, error)
	// DeleteGroupHookURLVariable sets a group hook URL variable.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_webhooks.html#delete-a-url-variable
	DeleteGroupHookURLVariable(gid interface{}, hook int, key string, options ...RequestOptionFunc) (*Response, error)
	// ListGroupMembers get a list of group members viewable by the authenticated
	// user. Inherited members through ancestor groups are not included.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/members.html#list-all-members-of-a-group-or-project
	ListGroupMembers(gid interface{}, opt *ListGroupMembersOptions, options ...RequestOptionFunc) ([]*GroupMember, *Response, error)
	// ListAllGroupMembers get a list of group members viewable by the authenticated
	// user. Returns a list including inherited members through ancestor groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/members.html#list-all-members-of-a-group-or-project-including-inherited-and-invited-members
	ListAllGroupMembers(gid interface{}, opt *ListGroupMembersOptions, options ...RequestOptionFunc) ([]*GroupMember, *Response, error)
	// ListBillableGroupMembers Gets a list of group members that count as billable.
	// The list includes members in the subgroup or subproject.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/members.html#list-all-billable-members-of-a-group
	ListBillableGroupMembers(gid interface{}, opt *ListBillableGroupMembersOptions, options ...RequestOptionFunc) ([]*BillableGroupMember, *Response, error)
	// ListMembershipsForBillableGroupMember gets a list of memberships for a
	// billable member of a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/members.html#list-memberships-for-a-billable-member-of-a-group
	ListMembershipsForBillableGroupMember(gid interface{}, user int, opt *ListMembershipsForBillableGroupMemberOptions, options ...RequestOptionFunc) ([]*BillableUserMembership, *Response, error)
	// RemoveBillableGroupMember removes a given group members that count as billable.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/members.html#remove-a-billable-member-from-a-group
	RemoveBillableGroupMember(gid interface{}, user int, options ...RequestOptionFunc) (*Response, error)
	// ListServiceAccounts gets a list of service acxcounts.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_service_accounts.html#list-service-account-users
	ListServiceAccounts(gid interface{}, opt *ListServiceAccountsOptions, options ...RequestOptionFunc) ([]*GroupServiceAccount, *Response, error)
	// Creates a service account user.
	//
	// This API endpoint works on top-level groups only. It does not work on subgroups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#create-service-account-user
	CreateServiceAccount(gid interface{}, opt *CreateServiceAccountOptions, options ...RequestOptionFunc) (*GroupServiceAccount, *Response, error)
	// DeleteServiceAccount Deletes a service account user.
	//
	// This API endpoint works on top-level groups only. It does not work on subgroups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_service_accounts.html#delete-a-service-account-user
	DeleteServiceAccount(gid interface{}, serviceAccount int, opt *DeleteServiceAccountOptions, options ...RequestOptionFunc) (*Response, error)
	// CreateServiceAccountPersonalAccessToken add a new Personal Access Token for a
	// service account user for a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_service_accounts.html#create-a-personal-access-token-for-a-service-account-user
	CreateServiceAccountPersonalAccessToken(gid interface{}, serviceAccount int, opt *CreateServiceAccountPersonalAccessTokenOptions, options ...RequestOptionFunc) (*PersonalAccessToken, *Response, error)
	// RotateServiceAccountPersonalAccessToken rotates a Personal Access Token for a
	// service account user for a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#create-personal-access-token-for-service-account-user
	RotateServiceAccountPersonalAccessToken(gid interface{}, serviceAccount, token int, opt *RotateServiceAccountPersonalAccessTokenOptions, options ...RequestOptionFunc) (*PersonalAccessToken, *Response, error)
	// ListGroups gets a list of groups (as user: my groups, as admin: all groups).
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-groups
	ListGroups(opt *ListGroupsOptions, options ...RequestOptionFunc) ([]*Group, *Response, error)
	// ListSubGroups gets a list of subgroups for a given group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-a-groups-subgroups
	ListSubGroups(gid interface{}, opt *ListSubGroupsOptions, options ...RequestOptionFunc) ([]*Group, *Response, error)
	// ListDescendantGroups gets a list of subgroups for a given project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-a-groups-descendant-groups
	ListDescendantGroups(gid interface{}, opt *ListDescendantGroupsOptions, options ...RequestOptionFunc) ([]*Group, *Response, error)
	// ListGroupProjects get a list of group projects
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-a-groups-projects
	ListGroupProjects(gid interface{}, opt *ListGroupProjectsOptions, options ...RequestOptionFunc) ([]*Project, *Response, error)
	// GetGroup gets all details of a group.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/groups.html#details-of-a-group
	GetGroup(gid interface{}, opt *GetGroupOptions, options ...RequestOptionFunc) (*Group, *Response, error)
	// DownloadAvatar downloads a group avatar.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#download-a-group-avatar
	DownloadAvatar(gid interface{}, options ...RequestOptionFunc) (*bytes.Reader, *Response, error)
	// CreateGroup creates a new project group. Available only for users who can
	// create groups.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/groups.html#new-group
	CreateGroup(opt *CreateGroupOptions, options ...RequestOptionFunc) (*Group, *Response, error)
	// TransferGroup transfers a project to the Group namespace. Available only
	// for admin.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#transfer-project-to-group
	TransferGroup(gid interface{}, pid interface{}, options ...RequestOptionFunc) (*Group, *Response, error)
	// TransferSubGroup transfers a group to a new parent group or turn a subgroup
	// to a top-level group. Available to administrators and users.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#transfer-a-group-to-a-new-parent-group--turn-a-subgroup-to-a-top-level-group
	TransferSubGroup(gid interface{}, opt *TransferSubGroupOptions, options ...RequestOptionFunc) (*Group, *Response, error)
	// UpdateGroup updates an existing group; only available to group owners and
	// administrators.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/groups.html#update-group
	UpdateGroup(gid interface{}, opt *UpdateGroupOptions, options ...RequestOptionFunc) (*Group, *Response, error)
	// UploadAvatar uploads a group avatar.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#upload-a-group-avatar
	UploadAvatar(gid interface{}, avatar io.Reader, filename string, options ...RequestOptionFunc) (*Group, *Response, error)
	// DeleteGroup removes group with all projects inside.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/groups.html#remove-group
	DeleteGroup(gid interface{}, opt *DeleteGroupOptions, options ...RequestOptionFunc) (*Response, error)
	// RestoreGroup restores a previously deleted group
	//
	// GitLap API docs:
	// https://docs.gitlab.com/ee/api/groups.html#restore-group-marked-for-deletion
	RestoreGroup(gid interface{}, options ...RequestOptionFunc) (*Group, *Response, error)
	// SearchGroup get all groups that match your string in their name or path.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/groups.html#search-for-group
	SearchGroup(query string, options ...RequestOptionFunc) ([]*Group, *Response, error)
	// ListProvisionedUsers gets a list of users provisioned by the given group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-provisioned-users
	ListProvisionedUsers(gid interface{}, opt *ListProvisionedUsersOptions, options ...RequestOptionFunc) ([]*User, *Response, error)
	// ListGroupLDAPLinks lists the group's LDAP links. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-ldap-group-links
	ListGroupLDAPLinks(gid interface{}, options ...RequestOptionFunc) ([]*LDAPGroupLink, *Response, error)
	// AddGroupLDAPLink creates a new group LDAP link. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#add-ldap-group-link-with-cn-or-filter
	AddGroupLDAPLink(gid interface{}, opt *AddGroupLDAPLinkOptions, options ...RequestOptionFunc) (*LDAPGroupLink, *Response, error)
	// DeleteGroupLDAPLink deletes a group LDAP link. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#delete-ldap-group-link
	DeleteGroupLDAPLink(gid interface{}, cn string, options ...RequestOptionFunc) (*Response, error)
	// DeleteGroupLDAPLinkWithCNOrFilter deletes a group LDAP link. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#delete-ldap-group-link-with-cn-or-filter
	DeleteGroupLDAPLinkWithCNOrFilter(gid interface{}, opts *DeleteGroupLDAPLinkWithCNOrFilterOptions, options ...RequestOptionFunc) (*Response, error)
	// DeleteGroupLDAPLinkForProvider deletes a group LDAP link from a specific
	// provider. Available only for users who can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#delete-ldap-group-link
	DeleteGroupLDAPLinkForProvider(gid interface{}, provider, cn string, options ...RequestOptionFunc) (*Response, error)
	// ListGroupSAMLLinks lists the group's SAML links. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#list-saml-group-links
	ListGroupSAMLLinks(gid interface{}, options ...RequestOptionFunc) ([]*SAMLGroupLink, *Response, error)
	// GetGroupSAMLLink get a specific group SAML link. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#get-saml-group-link
	GetGroupSAMLLink(gid interface{}, samlGroupName string, options ...RequestOptionFunc) (*SAMLGroupLink, *Response, error)
	// AddGroupSAMLLink creates a new group SAML link. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#add-saml-group-link
	AddGroupSAMLLink(gid interface{}, opt *AddGroupSAMLLinkOptions, options ...RequestOptionFunc) (*SAMLGroupLink, *Response, error)
	// DeleteGroupSAMLLink deletes a group SAML link. Available only for users who
	// can edit groups.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#delete-saml-group-link
	DeleteGroupSAMLLink(gid interface{}, samlGroupName string, options ...RequestOptionFunc) (*Response, error)
	// ShareGroupWithGroup shares a group with another group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#create-a-link-to-share-a-group-with-another-group
	ShareGroupWithGroup(gid interface{}, opt *ShareGroupWithGroupOptions, options ...RequestOptionFunc) (*Group, *Response, error)
	// UnshareGroupFromGroup unshares a group from another group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#delete-link-sharing-group-with-another-group
	UnshareGroupFromGroup(gid interface{}, groupID int, options ...RequestOptionFunc) (*Response, error)
	// GetGroupPushRules gets the push rules of a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#get-group-push-rules
	GetGroupPushRules(gid interface{}, options ...RequestOptionFunc) (*GroupPushRules, *Response, error)
	// AddGroupPushRule adds push rules to the specified group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#add-group-push-rule
	AddGroupPushRule(gid interface{}, opt *AddGroupPushRuleOptions, options ...RequestOptionFunc) (*GroupPushRules, *Response, error)
	// EditGroupPushRule edits a push rule for a specified group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#edit-group-push-rule
	EditGroupPushRule(gid interface{}, opt *EditGroupPushRuleOptions, options ...RequestOptionFunc) (*GroupPushRules, *Response, error)
	// DeleteGroupPushRule deletes the push rules of a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/groups.html#delete-group-push-rule
	DeleteGroupPushRule(gid interface{}, options ...RequestOptionFunc) (*Response, error)
}
