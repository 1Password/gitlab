// Code generated by MockGen. DO NOT EDIT.
// Source: deploymentmergerequestsservice_inf.go
//
// Generated by this command:
//
//	mockgen -package=mocks -source=deploymentmergerequestsservice_inf.go -destination=mocks/deploymentmergerequestsservice_inf.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gitlab "github.com/xanzy/go-gitlab"
	gomock "go.uber.org/mock/gomock"
)

// MockDeploymentMergeRequestsService is a mock of DeploymentMergeRequestsService interface.
type MockDeploymentMergeRequestsService struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentMergeRequestsServiceMockRecorder
}

// MockDeploymentMergeRequestsServiceMockRecorder is the mock recorder for MockDeploymentMergeRequestsService.
type MockDeploymentMergeRequestsServiceMockRecorder struct {
	mock *MockDeploymentMergeRequestsService
}

// NewMockDeploymentMergeRequestsService creates a new mock instance.
func NewMockDeploymentMergeRequestsService(ctrl *gomock.Controller) *MockDeploymentMergeRequestsService {
	mock := &MockDeploymentMergeRequestsService{ctrl: ctrl}
	mock.recorder = &MockDeploymentMergeRequestsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentMergeRequestsService) EXPECT() *MockDeploymentMergeRequestsServiceMockRecorder {
	return m.recorder
}

// ListDeploymentMergeRequests mocks base method.
func (m *MockDeploymentMergeRequestsService) ListDeploymentMergeRequests(pid any, deployment int, opts *gitlab.ListMergeRequestsOptions, options ...gitlab.RequestOptionFunc) ([]*gitlab.MergeRequest, *gitlab.Response, error) {
	m.ctrl.T.Helper()
	varargs := []any{pid, deployment, opts}
	for _, a := range options {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDeploymentMergeRequests", varargs...)
	ret0, _ := ret[0].([]*gitlab.MergeRequest)
	ret1, _ := ret[1].(*gitlab.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListDeploymentMergeRequests indicates an expected call of ListDeploymentMergeRequests.
func (mr *MockDeploymentMergeRequestsServiceMockRecorder) ListDeploymentMergeRequests(pid, deployment, opts any, options ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{pid, deployment, opts}, options...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeploymentMergeRequests", reflect.TypeOf((*MockDeploymentMergeRequestsService)(nil).ListDeploymentMergeRequests), varargs...)
}
