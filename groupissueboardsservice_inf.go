// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

// GroupIssueBoardsService is an interface for [gitlab.Client.GroupIssueBoards]
type GroupIssueBoardsService interface {
	// ListGroupIssueBoards gets a list of all issue boards in a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#list-all-group-issue-boards-in-a-group
	ListGroupIssueBoards(gid interface{}, opt *ListGroupIssueBoardsOptions, options ...RequestOptionFunc) ([]*GroupIssueBoard, *Response, error)
	// CreateGroupIssueBoard creates a new issue board.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#create-a-group-issue-board
	CreateGroupIssueBoard(gid interface{}, opt *CreateGroupIssueBoardOptions, options ...RequestOptionFunc) (*GroupIssueBoard, *Response, error)
	// GetGroupIssueBoard gets a single issue board of a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#single-group-issue-board
	GetGroupIssueBoard(gid interface{}, board int, options ...RequestOptionFunc) (*GroupIssueBoard, *Response, error)
	// UpdateIssueBoard updates a single issue board of a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#update-a-group-issue-board
	UpdateIssueBoard(gid interface{}, board int, opt *UpdateGroupIssueBoardOptions, options ...RequestOptionFunc) (*GroupIssueBoard, *Response, error)
	// DeleteIssueBoard delete a single issue board of a group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#delete-a-group-issue-board
	DeleteIssueBoard(gid interface{}, board int, options ...RequestOptionFunc) (*Response, error)
	// ListGroupIssueBoardLists gets a list of the issue board's lists. Does not include
	// backlog and closed lists.
	//
	// GitLab API docs: https://docs.gitlab.com/ee/api/group_boards.html#list-group-issue-board-lists
	ListGroupIssueBoardLists(gid interface{}, board int, opt *ListGroupIssueBoardListsOptions, options ...RequestOptionFunc) ([]*BoardList, *Response, error)
	// GetGroupIssueBoardList gets a single issue board list.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#single-group-issue-board-list
	GetGroupIssueBoardList(gid interface{}, board, list int, options ...RequestOptionFunc) (*BoardList, *Response, error)
	// CreateGroupIssueBoardList creates a new issue board list.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#new-group-issue-board-list
	CreateGroupIssueBoardList(gid interface{}, board int, opt *CreateGroupIssueBoardListOptions, options ...RequestOptionFunc) (*BoardList, *Response, error)
	// UpdateIssueBoardList updates the position of an existing
	// group issue board list.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#edit-group-issue-board-list
	UpdateIssueBoardList(gid interface{}, board, list int, opt *UpdateGroupIssueBoardListOptions, options ...RequestOptionFunc) ([]*BoardList, *Response, error)
	// DeleteGroupIssueBoardList soft deletes a group issue board list.
	// Only for admins and group owners.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/group_boards.html#delete-a-group-issue-board-list
	DeleteGroupIssueBoardList(gid interface{}, board, list int, options ...RequestOptionFunc) (*Response, error)
}
