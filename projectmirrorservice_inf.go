// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

// ProjectMirrorService is an interface for [gitlab.Client.ProjectMirrors]
type ProjectMirrorService interface {
	// ListProjectMirror gets a list of mirrors configured on the project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/remote_mirrors.html#list-a-projects-remote-mirrors
	ListProjectMirror(pid interface{}, opt *ListProjectMirrorOptions, options ...RequestOptionFunc) ([]*ProjectMirror, *Response, error)
	// GetProjectMirror gets a single mirror configured on the project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/remote_mirrors.html#get-a-single-projects-remote-mirror
	GetProjectMirror(pid interface{}, mirror int, options ...RequestOptionFunc) (*ProjectMirror, *Response, error)
	// AddProjectMirror creates a new mirror on the project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/remote_mirrors.html#create-a-push-mirror
	AddProjectMirror(pid interface{}, opt *AddProjectMirrorOptions, options ...RequestOptionFunc) (*ProjectMirror, *Response, error)
	// EditProjectMirror updates a project team member to a specified access level..
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/remote_mirrors.html#update-a-remote-mirrors-attributes
	EditProjectMirror(pid interface{}, mirror int, opt *EditProjectMirrorOptions, options ...RequestOptionFunc) (*ProjectMirror, *Response, error)
	// DeleteProjectMirror deletes a project mirror.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/remote_mirrors.html#delete-a-remote-mirror
	DeleteProjectMirror(pid interface{}, mirror int, options ...RequestOptionFunc) (*Response, error)
}
