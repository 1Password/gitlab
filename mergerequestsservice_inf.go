// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

// MergeRequestsService is an interface for [gitlab.Client.MergeRequests]
type MergeRequestsService interface {
	// ListMergeRequests gets all merge requests. The state parameter can be used
	// to get only merge requests with a given state (opened, closed, or merged)
	// or all of them (all). The pagination parameters page and per_page can be
	// used to restrict the list of merge requests.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#list-merge-requests
	ListMergeRequests(opt *ListMergeRequestsOptions, options ...RequestOptionFunc) ([]*MergeRequest, *Response, error)
	// ListProjectMergeRequests gets all merge requests for this project.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#list-project-merge-requests
	ListProjectMergeRequests(pid interface{}, opt *ListProjectMergeRequestsOptions, options ...RequestOptionFunc) ([]*MergeRequest, *Response, error)
	// ListGroupMergeRequests gets all merge requests for this group.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#list-group-merge-requests
	ListGroupMergeRequests(gid interface{}, opt *ListGroupMergeRequestsOptions, options ...RequestOptionFunc) ([]*MergeRequest, *Response, error)
	// GetMergeRequest shows information about a single merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-single-mr
	GetMergeRequest(pid interface{}, mergeRequest int, opt *GetMergeRequestsOptions, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// GetMergeRequestApprovals gets information about a merge requests approvals
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_request_approvals.html#merge-request-level-mr-approvals
	GetMergeRequestApprovals(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*MergeRequestApprovals, *Response, error)
	// GetMergeRequestCommits gets a list of merge request commits.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-single-merge-request-commits
	GetMergeRequestCommits(pid interface{}, mergeRequest int, opt *GetMergeRequestCommitsOptions, options ...RequestOptionFunc) ([]*Commit, *Response, error)
	// GetMergeRequestChanges shows information about the merge request including
	// its files and changes.
	//
	// Deprecated: This endpoint has been replaced by
	// MergeRequestsService.ListMergeRequestDiffs()
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-single-merge-request-changes
	GetMergeRequestChanges(pid interface{}, mergeRequest int, opt *GetMergeRequestChangesOptions, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// ListMergeRequestDiffs List diffs of the files changed in a merge request
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#list-merge-request-diffs
	ListMergeRequestDiffs(pid interface{}, mergeRequest int, opt *ListMergeRequestDiffsOptions, options ...RequestOptionFunc) ([]*MergeRequestDiff, *Response, error)
	// ShowMergeRequestRawDiffs Show raw diffs of the files changed in a merge request
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#show-merge-request-raw-diffs
	ShowMergeRequestRawDiffs(pid interface{}, mergeRequest int, opt *ShowMergeRequestRawDiffsOptions, options ...RequestOptionFunc) ([]byte, *Response, error)
	// GetMergeRequestParticipants gets a list of merge request participants.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-single-merge-request-participants
	GetMergeRequestParticipants(pid interface{}, mergeRequest int, options ...RequestOptionFunc) ([]*BasicUser, *Response, error)
	// GetMergeRequestReviewers gets a list of merge request reviewers.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-single-merge-request-reviewers
	GetMergeRequestReviewers(pid interface{}, mergeRequest int, options ...RequestOptionFunc) ([]*MergeRequestReviewer, *Response, error)
	// ListMergeRequestPipelines gets all pipelines for the provided merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#list-merge-request-pipelines
	ListMergeRequestPipelines(pid interface{}, mergeRequest int, options ...RequestOptionFunc) ([]*PipelineInfo, *Response, error)
	// CreateMergeRequestPipeline creates a new pipeline for a merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#create-merge-request-pipeline
	CreateMergeRequestPipeline(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*PipelineInfo, *Response, error)
	// GetIssuesClosedOnMerge gets all the issues that would be closed by merging the
	// provided merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#list-issues-that-close-on-merge
	GetIssuesClosedOnMerge(pid interface{}, mergeRequest int, opt *GetIssuesClosedOnMergeOptions, options ...RequestOptionFunc) ([]*Issue, *Response, error)
	// CreateMergeRequest creates a new merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#create-mr
	CreateMergeRequest(pid interface{}, opt *CreateMergeRequestOptions, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// UpdateMergeRequest updates an existing project milestone.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#update-mr
	UpdateMergeRequest(pid interface{}, mergeRequest int, opt *UpdateMergeRequestOptions, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// DeleteMergeRequest deletes a merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#delete-a-merge-request
	DeleteMergeRequest(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*Response, error)
	// AcceptMergeRequest merges changes submitted with MR using this API. If merge
	// success you get 200 OK. If it has some conflicts and can not be merged - you
	// get 405 and error message 'Branch cannot be merged'. If merge request is
	// already merged or closed - you get 405 and error message 'Method Not Allowed'
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#merge-a-merge-request
	AcceptMergeRequest(pid interface{}, mergeRequest int, opt *AcceptMergeRequestOptions, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// CancelMergeWhenPipelineSucceeds cancels a merge when pipeline succeeds. If
	// you don't have permissions to accept this merge request - you'll get a 401.
	// If the merge request is already merged or closed - you get 405 and error
	// message 'Method Not Allowed'. In case the merge request is not set to be
	// merged when the pipeline succeeds, you'll also get a 406 error.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#cancel-merge-when-pipeline-succeeds
	CancelMergeWhenPipelineSucceeds(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// RebaseMergeRequest automatically rebases the source_branch of the merge
	// request against its target_branch. If you don’t have permissions to push
	// to the merge request’s source branch, you’ll get a 403 Forbidden response.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#rebase-a-merge-request
	RebaseMergeRequest(pid interface{}, mergeRequest int, opt *RebaseMergeRequestOptions, options ...RequestOptionFunc) (*Response, error)
	// GetMergeRequestDiffVersions get a list of merge request diff versions.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-merge-request-diff-versions
	GetMergeRequestDiffVersions(pid interface{}, mergeRequest int, opt *GetMergeRequestDiffVersionsOptions, options ...RequestOptionFunc) ([]*MergeRequestDiffVersion, *Response, error)
	// GetSingleMergeRequestDiffVersion get a single MR diff version
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-a-single-merge-request-diff-version
	GetSingleMergeRequestDiffVersion(pid interface{}, mergeRequest, version int, opt *GetSingleMergeRequestDiffVersionOptions, options ...RequestOptionFunc) (*MergeRequestDiffVersion, *Response, error)
	// SubscribeToMergeRequest subscribes the authenticated user to the given merge
	// request to receive notifications. If the user is already subscribed to the
	// merge request, the status code 304 is returned.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#subscribe-to-a-merge-request
	SubscribeToMergeRequest(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// UnsubscribeFromMergeRequest unsubscribes the authenticated user from the
	// given merge request to not receive notifications from that merge request.
	// If the user is not subscribed to the merge request, status code 304 is
	// returned.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#unsubscribe-from-a-merge-request
	UnsubscribeFromMergeRequest(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*MergeRequest, *Response, error)
	// CreateTodo manually creates a todo for the current user on a merge request.
	// If there already exists a todo for the user on that merge request,
	// status code 304 is returned.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#create-a-to-do-item
	CreateTodo(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*Todo, *Response, error)
	// SetTimeEstimate sets the time estimate for a single project merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#set-a-time-estimate-for-a-merge-request
	SetTimeEstimate(pid interface{}, mergeRequest int, opt *SetTimeEstimateOptions, options ...RequestOptionFunc) (*TimeStats, *Response, error)
	// ResetTimeEstimate resets the time estimate for a single project merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#reset-the-time-estimate-for-a-merge-request
	ResetTimeEstimate(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*TimeStats, *Response, error)
	// AddSpentTime adds spent time for a single project merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#add-spent-time-for-a-merge-request
	AddSpentTime(pid interface{}, mergeRequest int, opt *AddSpentTimeOptions, options ...RequestOptionFunc) (*TimeStats, *Response, error)
	// ResetSpentTime resets the spent time for a single project merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#reset-spent-time-for-a-merge-request
	ResetSpentTime(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*TimeStats, *Response, error)
	// GetTimeSpent gets the spent time for a single project merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-time-tracking-stats
	GetTimeSpent(pid interface{}, mergeRequest int, options ...RequestOptionFunc) (*TimeStats, *Response, error)
	// CreateMergeRequestDependency creates a new merge request dependency for a given
	// merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#create-a-merge-request-dependency
	CreateMergeRequestDependency(pid interface{}, mergeRequest int, opts CreateMergeRequestDependencyOptions, options ...RequestOptionFunc) ([]MergeRequestDependency, *Response, error)
	// DeleteMergeRequestDependency deletes a merge request dependency for a given
	// merge request.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#delete-a-merge-request-dependency
	DeleteMergeRequestDependency(pid interface{}, mergeRequest int, blockingMergeRequest int, options ...RequestOptionFunc) (*Response, error)
	// GetMergeRequestDependencies gets a list of merge request dependencies.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/merge_requests.html#get-merge-request-dependencies
	GetMergeRequestDependencies(pid interface{}, mergeRequest int, options ...RequestOptionFunc) ([]MergeRequestDependency, *Response, error)
}
