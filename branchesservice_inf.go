// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

// BranchesService is an interface for [gitlab.Client.Branches]
type BranchesService interface {
	// ListBranches gets a list of repository branches from a project, sorted by
	// name alphabetically.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#list-repository-branches
	ListBranches(pid interface{}, opts *ListBranchesOptions, options ...RequestOptionFunc) ([]*Branch, *Response, error)
	// GetBranch gets a single project repository branch.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#get-single-repository-branch
	GetBranch(pid interface{}, branch string, options ...RequestOptionFunc) (*Branch, *Response, error)
	// ProtectBranch protects a single project repository branch. This is an
	// idempotent function, protecting an already protected repository branch
	// still returns a 200 OK status code.
	//
	// Deprecated: This endpoint has been replaced by
	// ProtectedBranchesService.ProtectRepositoryBranches()
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#protect-repository-branch
	ProtectBranch(pid interface{}, branch string, opts *ProtectBranchOptions, options ...RequestOptionFunc) (*Branch, *Response, error)
	// UnprotectBranch unprotects a single project repository branch. This is an
	// idempotent function, unprotecting an already unprotected repository branch
	// still returns a 200 OK status code.
	//
	// Deprecated: This endpoint has been replaced by
	// ProtectedBranchesService.UnprotectRepositoryBranches()
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#unprotect-repository-branch
	UnprotectBranch(pid interface{}, branch string, options ...RequestOptionFunc) (*Branch, *Response, error)
	// CreateBranch creates branch from commit SHA or existing branch.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#create-repository-branch
	CreateBranch(pid interface{}, opt *CreateBranchOptions, options ...RequestOptionFunc) (*Branch, *Response, error)
	// DeleteBranch deletes an existing branch.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#delete-repository-branch
	DeleteBranch(pid interface{}, branch string, options ...RequestOptionFunc) (*Response, error)
	// DeleteMergedBranches deletes all branches that are merged into the project's default branch.
	//
	// GitLab API docs:
	// https://docs.gitlab.com/ee/api/branches.html#delete-merged-branches
	DeleteMergedBranches(pid interface{}, options ...RequestOptionFunc) (*Response, error)
}
