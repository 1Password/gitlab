// Code generated by ifacemaker; DO NOT EDIT.

package gitlab

import (
	"io"
)

// DependencyListExportService is an interface for [gitlab.Client.DependencyListExport]
type DependencyListExportService interface {
	// CreateDependencyListExport creates a new CycloneDX JSON export for all the project dependencies
	// detected in a pipeline.
	//
	// If an authenticated user does not have permission to read_dependency, this request returns a 403
	// Forbidden status code.
	//
	// SBOM exports can be only accessed by the exportâ€™s author.
	//
	// GitLab docs:
	// https://docs.gitlab.com/ee/api/dependency_list_export.html#create-a-pipeline-level-dependency-list-export
	CreateDependencyListExport(pipelineID int, opt *CreateDependencyListExportOptions, options ...RequestOptionFunc) (*DependencyListExport, *Response, error)
	// GetDependencyListExport gets metadata about a single dependency list export.
	//
	// GitLab docs:
	// https://docs.gitlab.com/ee/api/dependency_list_export.html#get-single-dependency-list-export
	GetDependencyListExport(id int, options ...RequestOptionFunc) (*DependencyListExport, *Response, error)
	// DownloadDependencyListExport downloads a single dependency list export.
	//
	// The github.com/CycloneDX/cyclonedx-go package can be used to parse the data from the returned io.Reader.
	//
	//	sbom := new(cdx.BOM)
	//	decoder := cdx.NewBOMDecoder(reader, cdx.BOMFileFormatJSON)
	//
	//	if err = decoder.Decode(sbom); err != nil {
	//		panic(err)
	//	}
	//
	// GitLab docs:
	// https://docs.gitlab.com/ee/api/dependency_list_export.html#download-dependency-list-export
	DownloadDependencyListExport(id int, options ...RequestOptionFunc) (io.Reader, *Response, error)
}
